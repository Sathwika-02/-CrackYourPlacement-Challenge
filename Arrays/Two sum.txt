Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You can return the answer in any order.

Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]

Solution-1:

class Solution {
    public int[] twoSum(int[] nums, int target) {
    
        for(int i=0;i<nums.length;i++)
        {
           for(int j=i+1;j<nums.length;j++)
               {
                if(nums[i]+nums[j]==target)
                    {
                     return new int[] {i, j};
                    }
               }
        }
       return new int[] {-1, -1};
    }
}

Solution-2:
class Solution {
    public int[] twoSum(int[] nums, int target) {
          if (nums.length == 2 && nums[0] + nums[1] == target) return new int[]{0,1};
        int []ans=new int[2];
        HashMap<Integer,Integer>hm=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(hm.containsKey(target-nums[i])){
                ans[0]=i;
                ans[1]=hm.get(target-nums[i]);
            }
            else{
                hm.put(nums[i],i);
            }
        }
        return ans;
        
    }
}